{"ast":null,"code":"import axios from 'axios'; // set base url for production or dev\n\nlet baseURL = process.env.API_URL2 ? process.env.API_URL2 : \"https://somewhereinheroku.com/api/v1/\";\nlet token;\n/*\n*@companyName: EMS\n*@Location : Lagos Nigeria\n*@Author/Developer : juwa victor/saladinjake\n*@AuthorsEmail : juwavictor@gmail.com\n*@description: Axios configuration file\n*@params:\n*@Methods: get, post, put, patch, delete \n*@usage: axios.get(url); axios.put(url,data); axios.post(url,data)...\n*/\n\naxios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\naxios.defaults.headers.common['Authorization'] = `Bearer ${token}`; //create axios instance\n\nconst instance = axios.create({\n  baseURL\n}); // intercept request before they are sent\n\ninstance.interceptors.request.use(function (config) {\n  // check if token exists in the request header or set it if user is authenticated\n  token = localStorage.getItem('token');\n\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","baseURL","process","env","API_URL2","token","defaults","headers","common","instance","create","interceptors","request","use","config","localStorage","getItem","error","Promise","reject"],"sources":["C:/Users/Obiajulu/Desktop/GAB/REACT-WITH-ME/enrollments/src/enterprise-app/core/api/services/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\n// set base url for production or dev\nlet baseURL = process.env.API_URL2\n  ? process.env.API_URL2\n  : \"https://somewhereinheroku.com/api/v1/\";\nlet token;\n\n\n\n/*\n*@companyName: EMS\n*@Location : Lagos Nigeria\n*@Author/Developer : juwa victor/saladinjake\n*@AuthorsEmail : juwavictor@gmail.com\n*@description: Axios configuration file\n*@params:\n*@Methods: get, post, put, patch, delete \n*@usage: axios.get(url); axios.put(url,data); axios.post(url,data)...\n*/\n\naxios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\naxios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n//create axios instance\nconst instance = axios.create({\n  baseURL,\n});\n\n\n// intercept request before they are sent\ninstance.interceptors.request.use(\n  function (config) {\n    // check if token exists in the request header or set it if user is authenticated\n    token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GACVF,OAAO,CAACC,GAAR,CAAYC,QADF,GAEV,uCAFJ;AAGA,IAAIC,KAAJ;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAL,KAAK,CAACM,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgD,mCAAhD;AACAR,KAAK,CAACM,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAASH,KAAM,EAAjE,C,CAEA;;AACA,MAAMI,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAAa;EAC5BT;AAD4B,CAAb,CAAjB,C,CAKA;;AACAQ,QAAQ,CAACE,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACE,UAAUC,MAAV,EAAkB;EAChB;EACAT,KAAK,GAAGU,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;;EACA,IAAIX,KAAJ,EAAW;IACTS,MAAM,CAACP,OAAP,CAAe,eAAf,IAAmC,UAASF,KAAM,EAAlD;EACD;;EACD,OAAOS,MAAP;AACD,CARH,EASE,UAAUG,KAAV,EAAiB;EACf,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAXH;AAcA,eAAeR,QAAf"},"metadata":{},"sourceType":"module"}