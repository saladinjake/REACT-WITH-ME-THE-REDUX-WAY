{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Obiajulu\\\\Desktop\\\\GAB\\\\REACT-WITH-ME\\\\src\\\\routes\\\\PublicRoute.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport roleNavigation from \"helper/roleNavigator\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst PublicRoute = _ref => {\n  let {\n    component: Component,\n    auth: {\n      user,\n      isAuthenticated,\n      user_roles\n    },\n    ...rest\n  } = _ref;\n  let isLoggedIn = false;\n\n  if (user && isAuthenticated) {\n    isLoggedIn = true;\n  }\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isLoggedIn ? /*#__PURE__*/React.createElement(Redirect, {\n      to: roleNavigation(user_roles[0].name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }));\n};\n\nPublicRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(PublicRoute);","map":{"version":3,"names":["React","PropTypes","roleNavigation","Route","Redirect","connect","PublicRoute","component","Component","auth","user","isAuthenticated","user_roles","rest","isLoggedIn","props","name","propTypes","object","isRequired","mapStateToProps","state"],"sources":["C:/Users/Obiajulu/Desktop/GAB/REACT-WITH-ME/src/routes/PublicRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport roleNavigation from \"helper/roleNavigator\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  auth: { user, isAuthenticated,user_roles },\r\n  ...rest\r\n}) => {\r\n  let isLoggedIn = false;\r\n  if (user && isAuthenticated) {\r\n    isLoggedIn = true;\r\n  }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? (\r\n          <Redirect to={roleNavigation(user_roles[0].name)} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(PublicRoute);\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAW,GAAG,QAId;EAAA,IAJe;IACnBC,SAAS,EAAEC,SADQ;IAEnBC,IAAI,EAAE;MAAEC,IAAF;MAAQC,eAAR;MAAwBC;IAAxB,CAFa;IAGnB,GAAGC;EAHgB,CAIf;EACJ,IAAIC,UAAU,GAAG,KAAjB;;EACA,IAAIJ,IAAI,IAAIC,eAAZ,EAA6B;IAC3BG,UAAU,GAAG,IAAb;EACD;;EAED,oBACE,oBAAC,KAAD,oBACMD,IADN;IAEE,MAAM,EAAGE,KAAD,IACND,UAAU,gBACR,oBAAC,QAAD;MAAU,EAAE,EAAEZ,cAAc,CAACU,UAAU,CAAC,CAAD,CAAV,CAAcI,IAAf,CAA5B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADQ,gBAGR,oBAAC,SAAD,oBAAeD,KAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GANN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADF;AAYD,CAtBD;;AAwBAT,WAAW,CAACW,SAAZ,GAAwB;EACtBR,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBC;AADD,CAAxB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;EAClCZ,IAAI,EAAEY,KAAK,CAACZ;AADsB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACe,eAAD,EAAkB,EAAlB,CAAP,CAA6Bd,WAA7B,CAAf"},"metadata":{},"sourceType":"module"}